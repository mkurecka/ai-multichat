version: '3.8'

services:
  # Backend services
  php:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    volumes:
      - ./backend/config/jwt:/var/www/html/config/jwt
    depends_on:
      - database
    environment:
      - APP_ENV=prod
      - APP_SECRET=${APP_SECRET}
      - DATABASE_URL=mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@database:3306/${MYSQL_DATABASE}?serverVersion=8.0.32&charset=utf8mb4
      - CORS_ALLOW_ORIGIN=${CORS_ALLOW_ORIGIN}
      - FRONTEND_URL=${FRONTEND_URL}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OPENROUTER_CACHE_TTL=${OPENROUTER_CACHE_TTL:-3600}

  nginx_backend:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT:-8000}:80"
    volumes:
      - ./backend/public:/var/www/html/public:ro
      - ./docker/nginx/backend.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php

  database:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - database_data:/var/lib/mysql:rw
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      timeout: 5s
      retries: 5
      start_period: 60s

  # Frontend services
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        - VITE_API_URL=${BACKEND_URL}/api
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-3000}:80"
    depends_on:
      - nginx_backend

volumes:
  database_data:
